#################################################################################
# change path to wherever you saved it
load("C:/Users/alman/Desktop/Eoghan/probando_Eoghan.rda")
# extract needed data from SummarizedExperiment object
# in the downloaded data, theres "Primary solid Tumor", "Solid Tissue Normal" and "Metastatic" labelled samples
tcga_brca_all <- as.data.frame(assay(data))  # gene expression data
#######################
### DGAT2 TCGA WORK ###
#######################
### Load necessary packages
library("TCGAbiolinks")
library("SummarizedExperiment")
library("ggplot2")
library("biomaRt")
library("pheatmap")
library("RCurl")
# extract needed data from SummarizedExperiment object
# in the downloaded data, theres "Primary solid Tumor", "Solid Tissue Normal" and "Metastatic" labelled samples
tcga_brca_all <- as.data.frame(assay(data))  # gene expression data
brca_subtype <- as.data.frame(data$subtype_BRCA_Subtype_PAM50) #BC subtype, taken from this paper: doi.org/10.1016/j.ccell.2018.03.014
tissue_type <- as.data.frame(data$definition) # tissue type of each sample
View(tcga_brca_all) # genes in rows, samples in columns
######################
###EOGHAN JUP STUFF###
######################
### Load necessary packages
library("TCGAbiolinks")
library("SummarizedExperiment")
library("ggplot2")
library("biomaRt")
library("pheatmap")
#################################################################################
# after first time you download, you can skip the previous steps and start HERE #
#################################################################################
# change path to wherever you saved it
load("C:/Users/alman/Desktop/Eoghan/probando_Eoghan.rda")
# extract needed data from SummarizedExperiment object
# in the downloaded data, theres "Primary solid Tumor", "Solid Tissue Normal" and "Metastatic" labelled samples
tcga_brca_all <- as.data.frame(assay(data))  # gene expression data
brca_subtype <- as.data.frame(data$subtype_BRCA_Subtype_PAM50) #BC subtype, taken from this paper: doi.org/10.1016/j.ccell.2018.03.014
tissue_type <- as.data.frame(data$definition) # tissue type of each sample
# load IRE1_gene_sig (previously copied to your working directory)
breast_IRE1_sig <- read.csv("C:/Users/alman/Desktop/Eoghan/breast_IRE1_sig.csv")
# calculate IRE1 score for each sample
# mean of IRE1 positively correlated genes - mean of negatively correlated
tcga_brca_sig <- tcga_brca_all[as.character(breast_IRE1_sig$ensembl_gene_id),]
IRE1_score_pos <- log2(colMeans(na.omit(tcga_brca_sig[which(breast_IRE1_sig$sig == "TRUE"),])))
IRE1_score_neg <- log2(colMeans(na.omit(tcga_brca_sig[which(breast_IRE1_sig$sig == "FALSE"),])))
IRE1_score <- IRE1_score_pos - IRE1_score_neg
# other UPR sigs
file_list <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt', full.names = TRUE)
file_list
# other UPR sigs
file_list <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt', full.names = TRUE)
nombres <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt')
signatures <- list()
for (i in 1:5){
temp_data <- read.csv(file_list[i], skip = 2)
signatures[i] <- temp_data #for each iteration, bind the new data to the building list
}
# annotate HSYMBOL
library("biomaRt")
listEnsembl(GRCh=38)
listEnsembl(version=104)
ensembl = useMart("ensembl")
ensembl = useDataset("hsapiens_gene_ensembl",mart=ensembl)
todo_genes <- getBM(attributes=c('ensembl_gene_id', 'hgnc_symbol'), mart=ensembl)
tcga_brca_all_ann0t <- merge(tcga_brca_all, todo_genes, by.x=0, by.y=1)
# other UPR sigs
file_list <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt', full.names = TRUE)
nombres <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt')
signatures <- list()
for (i in 1:length(signatures)){
temp_data <- read.csv(file_list[i], skip = 2)
signatures[i] <- temp_data #for each iteration, bind the new data to the building list
}
length(signatures)
signatures <- list()
for (i in 1:length(file_list)){
temp_data <- read.csv(file_list[i], skip = 2)
signatures[i] <- temp_data #for each iteration, bind the new data to the building list
}
#
signatures_scores <- list()
for (i in 1:length(signatures)){
ind <- which(tcga_brca_all_ann0t$hgnc_symbol %in% signatures[[i]])
ooo <- tcga_brca_all_ann0t[ind,]
score <- list(log2(colMeans(na.omit(ooo[,-c(1,1224)]))))
signatures_scores[i] <- score #for each iteration, bind the new data to the building list
}
names(signatures_scores) <- nombres
### Retrieve JUP expression data (they are annotated with ensembl ID)
genes <- as.data.frame(t(log2(tcga_brca_all[c("ENSG00000062282", "ENSG00000085063", "ENSG00000173801", "ENSG00000135441"),]))) #if you want to check other gene, just change ENSEMBL ID
colnames(genes) <- c("DGAT2", "CD59" , "JUP" , "BLOC1S1" )
# create data frame including all info together
todo_junto <- cbind(genes,
PAM_50 = brca_subtype$`data$subtype_BRCA_Subtype_PAM50`,
tissue_type = tissue_type,
IRE1_score = IRE1_score,
IRE1_score_neg = IRE1_score_neg,
IRE1_score_pos = IRE1_score_pos,
as.data.frame(signatures_scores))
View(todo_junto)
View(signatures)
file_list
View(tcga_brca_all_ann0t)
View(tcga_brca_all_ann0t)
#
signatures_scores <- list()
for (i in 1:length(signatures)){
ind <- which(tcga_brca_all_ann0t$hgnc_symbol %in% signatures[[i]])
ooo <- tcga_brca_all_ann0t[ind,]
score <- list(log2(colMeans(na.omit(ooo[,-c(1,1224)]))))
signatures_scores[i] <- score #for each iteration, bind the new data to the building list
}
signatures <- list()
for (i in 1:length(file_list)){
temp_data <- read.csv(file_list[i], skip = 2)
signatures[i] <- temp_data #for each iteration, bind the new data to the building list
}
#
signatures_scores <- list()
for (i in 1:length(signatures)){
ind <- which(tcga_brca_all_ann0t$hgnc_symbol %in% signatures[[i]])
ooo <- tcga_brca_all_ann0t[ind,]
score <- list(log2(colMeans(na.omit(ooo[,-c(1,1224)]))))
signatures_scores[i] <- score #for each iteration, bind the new data to the building list
}
names(signatures_scores) <- nombres
### Retrieve JUP expression data (they are annotated with ensembl ID)
genes <- as.data.frame(t(log2(tcga_brca_all[c("ENSG00000062282", "ENSG00000085063", "ENSG00000173801", "ENSG00000135441"),]))) #if you want to check other gene, just change ENSEMBL ID
colnames(genes) <- c("DGAT2", "CD59" , "JUP" , "BLOC1S1" )
# create data frame including all info together
todo_junto <- cbind(genes,
PAM_50 = brca_subtype$`data$subtype_BRCA_Subtype_PAM50`,
tissue_type = tissue_type,
IRE1_score = IRE1_score,
IRE1_score_neg = IRE1_score_neg,
IRE1_score_pos = IRE1_score_pos,
as.data.frame(signatures_scores))
View(todo_junto)
# now lets plot things
#############################################
##### JUP mRNA expression across subtypes ###
#############################################
# data only for tumor samples
todo_junto_tum <- todo_junto[which(tissue_type$`data$definition` == "Primary solid Tumor"),] # create index with position of tumor samples only
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.8,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3)
}
vamonos(1, 2)
colnames(todo_junto_tum)
vamonos(2, 12)
vamonos(12, 1)
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3)
}
vamonos(12, 1)
View(todo_junto_tum)
todo_junto_tum <- subset(todo_junto_tum. todo_junto_tum$PAM_50 == "Basal")
todo_junto_tum <- subset(todo_junto_tum. todo_junto_tum$PAM_50 == "Basal")
todo_junto_tum <- subset(todo_junto_tum, todo_junto_tum$PAM_50 == "Basal")
vamonos(12, 1)
Metasyx_MD <- read.csv("~/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Metasyx_MD.csv", row.names=1)
View(Metasyx_MD)
Metasyx_MD <- read.csv("~/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Metasyx_MD.csv")
noaa <- subset(Metasyx_MD, Metasyx_MD$Lipid_Class != "NA")
View(noaa)
noaa <- subset(Metasyx_MD, Metasyx_MD$Lipid_Class != "Amino Acids")
getwd()
write.csv(noaa, "Metasyx_MD.v2.csv", row.names = F)
colnames(todo_junto_tum)
#################################################################################
# after first time you download, you can skip the previous steps and start HERE #
#################################################################################
# change path to wherever you saved it
load("C:/Users/alman/Desktop/Eoghan/probando_Eoghan.rda")
# extract needed data from SummarizedExperiment object
# in the downloaded data, theres "Primary solid Tumor", "Solid Tissue Normal" and "Metastatic" labelled samples
tcga_brca_all <- as.data.frame(assay(data))  # gene expression data
brca_subtype <- as.data.frame(data$subtype_BRCA_Subtype_PAM50) #BC subtype, taken from this paper: doi.org/10.1016/j.ccell.2018.03.014
tissue_type <- as.data.frame(data$definition) # tissue type of each sample
# load IRE1_gene_sig (previously copied to your working directory)
breast_IRE1_sig <- read.csv("C:/Users/alman/Desktop/Eoghan/breast_IRE1_sig.csv")
# calculate IRE1 score for each sample
# mean of IRE1 positively correlated genes - mean of negatively correlated
tcga_brca_sig <- tcga_brca_all[as.character(breast_IRE1_sig$ensembl_gene_id),]
IRE1_score_pos <- log2(colMeans(na.omit(tcga_brca_sig[which(breast_IRE1_sig$sig == "TRUE"),])))
IRE1_score_neg <- log2(colMeans(na.omit(tcga_brca_sig[which(breast_IRE1_sig$sig == "FALSE"),])))
IRE1_score <- IRE1_score_pos - IRE1_score_neg
# other UPR sigs
file_list <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt', full.names = TRUE)
nombres <- list.files(path= "C:/Users/alman/Desktop/Manuscript/TCGA",pattern='.txt')
signatures <- list()
for (i in 1:length(file_list)){
temp_data <- read.csv(file_list[i], skip = 2)
signatures[i] <- temp_data #for each iteration, bind the new data to the building list
}
# annotate HSYMBOL
library("biomaRt")
listEnsembl(GRCh=38)
listEnsembl(version=104)
listEnsembl(version=104)
ensembl = useMart("ensembl")
listDatasets(ensembl)
ensembl = useDataset("hsapiens_gene_ensembl",mart=ensembl)
todo_genes <- getBM(attributes=c('ensembl_gene_id', 'hgnc_symbol'), mart=ensembl)
tcga_brca_all_ann0t <- merge(tcga_brca_all, todo_genes, by.x=0, by.y=1)
#
signatures_scores <- list()
for (i in 1:length(signatures)){
ind <- which(tcga_brca_all_ann0t$hgnc_symbol %in% signatures[[i]])
ooo <- tcga_brca_all_ann0t[ind,]
score <- list(log2(colMeans(na.omit(ooo[,-c(1,1224)]))))
signatures_scores[i] <- score #for each iteration, bind the new data to the building list
}
names(signatures_scores) <- nombres
### Retrieve JUP expression data (they are annotated with ensembl ID)
genes <- as.data.frame(t(log2(tcga_brca_all[c("ENSG00000062282", "ENSG00000085063", "ENSG00000173801", "ENSG00000135441"),]))) #if you want to check other gene, just change ENSEMBL ID
colnames(genes) <- c("DGAT2", "CD59" , "JUP" , "BLOC1S1" )
# create data frame including all info together
todo_junto <- cbind(genes,
PAM_50 = brca_subtype$`data$subtype_BRCA_Subtype_PAM50`,
tissue_type = tissue_type,
IRE1_score = IRE1_score,
IRE1_score_neg = IRE1_score_neg,
IRE1_score_pos = IRE1_score_pos,
as.data.frame(signatures_scores))
todo_junto_tum <- subset(todo_junto_tum, todo_junto_tum$PAM_50 == "Basal")
# now lets plot things
#############################################
##### JUP mRNA expression across subtypes ###
#############################################
# data only for tumor samples
todo_junto_tum <- todo_junto[which(tissue_type$`data$definition` == "Primary solid Tumor"),] # create index with position of tumor samples only
todo_junto_tum <- subset(todo_junto_tum, todo_junto_tum$PAM_50 == "Basal")
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3)
}
vamonos(12, 1)
colnames(todo_junto_tum)
vamonos(12, 1)
vamonos(7, 1)
# create data frame including all info together
todo_junto <- cbind(genes,
PAM_50 = brca_subtype$`data$subtype_BRCA_Subtype_PAM50`,
tissue_type = tissue_type,
"IRE1 gene sig(Logue et al. 2018)" = IRE1_score,
IRE1_score_neg = IRE1_score_neg,
IRE1_score_pos = IRE1_score_pos,
as.data.frame(signatures_scores))
# now lets plot things
#############################################
##### JUP mRNA expression across subtypes ###
#############################################
# data only for tumor samples
todo_junto_tum <- todo_junto[which(tissue_type$`data$definition` == "Primary solid Tumor"),] # create index with position of tumor samples only
todo_junto_tum <- subset(todo_junto_tum, todo_junto_tum$PAM_50 == "Basal")
vamonos(12, 1)
vamonos(7, 1)
colnames(todo_junto_tum)
vamonos(7, 2)
vamonos(7, 2) + facet_wrap(~ align)
vamonos(7, 2) + facet_wrap(~ DGAT2)
#or plot them all together to evaluate in 1 look
library(gridExtra)
numeros <- c(7,10,11,15)
p <- list()
for (i in numeros) {
p[[i]] <- vamonos(i, 2)
}
do.call(grid.arrange,p)
p <- list()
for (i in numeros) {
p[[i]] <- vamonos(i, 2)
}
numeros
p <- list()
for (i in c(7,10,11,15)) {
p[[i]] <- vamonos(i, 2)
}
#or plot them all together to evaluate in 1 look
library(gridExtra)
numeros <- c(7,10,11,15)
counter <- 1
p <- list()
for (i in c(7,10,11,15)) {
p[[counter]] <- vamonos(i, 2)
counter <- counter + 1
}
do.call(grid.arrange,p)
#or plot them all together to evaluate in 1 look
library(gridExtra)
numeros <- c(7,10,11,15)
counter <- 1
p <- list()
for (i in c(7,10,11,15)) {
p[[counter]] <- vamonos(i, 1)
counter <- counter + 1
}
o <- list()
counter <- 1
for (i in c(7,10,11,15)) {
o[[counter]] <- vamonos(i, 2)
counter <- counter + 1
}
grid.arrange(p[[1]], o[[1]])
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]])
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]])
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2)
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3) +
theme(legend.position = "none")
}
#or plot them all together to evaluate in 1 look
library(gridExtra)
numeros <- c(7,10,11,15)
counter <- 1
p <- list()
for (i in c(7,10,11,15)) {
p[[counter]] <- vamonos(i, 1)
counter <- counter + 1
}
o <- list()
counter <- 1
for (i in c(7,10,11,15)) {
o[[counter]] <- vamonos(i, 2)
counter <- counter + 1
}
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2)
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2, padding = unit(1, "line"))
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1.5,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3) +
theme(legend.position = "none")
}
#or plot them all together to evaluate in 1 look
library(gridExtra)
numeros <- c(7,10,11,15)
counter <- 1
p <- list()
for (i in c(7,10,11,15)) {
p[[counter]] <- vamonos(i, 1)
counter <- counter + 1
}
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3) +
theme(legend.position = "none")
}
o <- list()
counter <- 1
for (i in c(7,10,11,15)) {
o[[counter]] <- vamonos(i, 2)
counter <- counter + 1
}
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2, layout_matrix)
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2, layout_matrix = matrix(seq_len(nrow *ncol)))
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2, layout_matrix = matrix(seq_len(8)))
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2, layout_matrix = matrix(2,4))
grid.arrange(p[[1]], o[[1]], p[[2]], o[[2]], p[[3]], o[[3]], p[[4]], o[[4]], ncol = 2)
library(patchwork)
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1.5,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3) +
theme(legend.position = "none")
}
#or plot them all together to evaluate in 1 look
library(patchwork)
numeros <- c(7,10,11,15)
tags <- c("A", "C", "E", "G")
counter <- 1
p <- list()
for (i in c(7,10,11,15)) {
p[[counter]] <- vamonos(i, 1) + labs(tag = tags[counter])
counter <- counter + 1
}
#####################################
### COMPARE JUP EXP VS IRE1 SCORE ###
#####################################
# only for tumor samples
vamonos = function(columna1, columna2) {
p <- ggplot(todo_junto_tum, aes(todo_junto_tum[,columna1], todo_junto_tum[,columna2]))
p + geom_point(aes(colour = todo_junto_tum$PAM_50, size = 2, alpha = 0.5)) +
labs(x = colnames(todo_junto_tum)[columna1], y = colnames(todo_junto_tum)[columna2], element_text(face = "bold", angle = 0)) +
geom_smooth(method="lm", color = "red") + theme(axis.line = element_line(size = 3, colour = "grey80")) +
scale_colour_manual(values = c("darkred", "black", "cyan", "darkblue", "khaki",  "grey50")) +
guides(colour = guide_legend("BC subtypes", override.aes = list(size=5), title.theme = element_text(face = "bold", angle = 0)), size = "none") +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-0.5 ,label = paste("R^{2}==", round(cor(todo_junto_tum[,columna1], todo_junto_tum[,columna2]), digits = 4)), parse = TRUE, size=6) +
annotate('text', x = max(todo_junto_tum[,columna1])-0.5, y = max(todo_junto_tum[,columna2])-1,label =paste("P-value==",cor.test(todo_junto_tum[,columna1], todo_junto_tum[,columna2])$p.value), parse = TRUE, size=3) +
theme(legend.position = "none")
}
o <- list()
tags <- c("B", "D", "F", "G")
counter <- 1
for (i in c(7,10,11,15)) {
o[[counter]] <- vamonos(i, 2) + labs(tag = tags[counter])
counter <- counter + 1
}
p[[1]] + o[[1]]
ggplot2::theme_update(plot.tag = element_text(face = "bold", size=24))
p[[1]] + o[[1]]
p[[1]] + o[[1]] + p[[3]] + o[[3]] + p[[4]] + o[[4]]
p[[1]] + o[[1]] + p[[2]] + o[[2]] + p[[3]] + o[[3]] + p[[4]] + o[[4]] + plot_layout(ncol = 2)
#################################################################################
# after first time you download, you can skip the previous steps and start HERE #
#################################################################################
# change path to wherever you saved it
load("C:/Users/alman/Desktop/Eoghan/probando_Eoghan.rda")
# extract needed data from SummarizedExperiment object
# in the downloaded data, theres "Primary solid Tumor", "Solid Tissue Normal" and "Metastatic" labelled samples
tcga_brca_all <- as.data.frame(assay(data))  # gene expression data
brca_subtype <- as.data.frame(data$subtype_BRCA_Subtype_PAM50) #BC subtype, taken from this paper: doi.org/10.1016/j.ccell.2018.03.014
tissue_type <- as.data.frame(data$definition) # tissue type of each sample
View(tcga_brca_all)
View(tissue_type)
tcga_brca_all_X <- as.data.frame(t(tcga_brca_all))
View(tcga_brca_all_X)
tcga_brca_all_X <- cbind(tcga_brca_all_X, tissue_type, brca_subtype)
View(tcga_brca_all_X)
setwd("~/GitHub/RShiny_TCGA-BRCA")
write.table(tcga_brca_all_X, "tcga_brca_all_X.txt", append = FALSE, sep = " ", dec = ".", row.names = TRUE, col.names = TRUE)
write.csv(tcga_brca_all_X, "tcga_brca_all_X.txt")
getwd()
write.table(tcga_brca_all_X, "tcga_brca_all_X.txt", sep = " ", dec = ".", row.names = TRUE, col.names = TRUE)
View(tissue_type)
View(brca_subtype)
unique(brca_subtype$`data$subtype_BRCA_Subtype_PAM50`)
library(shiny); runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
runApp('corrApp.R')
